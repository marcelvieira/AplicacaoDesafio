// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;

namespace AplicacaoDesafioAPI.Models;

public partial class ChallengeContext : DbContext
{
    public ChallengeContext()
    {
    }

    public ChallengeContext(DbContextOptions<ChallengeContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Pessoa> Pessoa { get; set; }

    public virtual DbSet<Telefone> Telefone { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer("ConnectionSQL");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Pessoa>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Pessoas");

            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(80)
                .IsFixedLength();
            entity.Property(e => e.FotoUrl)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("FotoURL");
            entity.Property(e => e.Grupo)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.Morada)
                .IsRequired()
                .HasMaxLength(255)
                .IsFixedLength();
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(100)
                .IsFixedLength();
        });

        modelBuilder.Entity<Telefone>(entity =>
        {
            entity.HasKey(e => e.IdItem);

            entity.Property(e => e.IdItem).HasColumnName("Id_Item");
            entity.Property(e => e.IdPessoa).HasColumnName("Id_Pessoa");
            entity.Property(e => e.Numero)
                .HasMaxLength(15)
                .IsFixedLength();
            entity.Property(e => e.Tipo)
                .HasMaxLength(20)
                .IsFixedLength();

            entity.HasOne(d => d.IdPessoaNavigation).WithMany(p => p.Telefone)
                .HasForeignKey(d => d.IdPessoa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Telefone_Pessoa");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}